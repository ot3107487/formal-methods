THEORY ProofList
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
PERSON: FIN(INTEGER) & not(PERSON = {}) & CARDS: FIN(INTEGER) & not(CARDS = {}) & ((1..2)*{TYPES}): FIN(NATURAL*{TYPES}) & not(((1..2)*{TYPES}) = {}) & SHOP: FIN(INTEGER) & not(SHOP = {}) & ((1..4)*{REGIONS}): FIN(NATURAL*{REGIONS}) & not(((1..4)*{REGIONS}) = {}) & PAYMENT: FIN(INTEGER) & not(PAYMENT = {}) & min_age : ((1..2)*{TYPES}) +-> NATURAL & dom(min_age) = ((1..2)*{TYPES}) & ((min_age) : (((((1..2)*{TYPES})) --> (NATURAL)))) & ((min_age) = (({(((1|->TYPES)) |-> (22))}\/{(((2|->TYPES)) |-> (14))}))) & card_acceptance : ((1..4)*{REGIONS}) +-> ((1..2)*{TYPES}) & dom(card_acceptance) = ((1..4)*{REGIONS}) & ((card_acceptance) : (((((1..4)*{REGIONS})) --> (((1..2)*{TYPES}))))) & ((card_acceptance) = (({(((3|->REGIONS)) |-> ((1|->TYPES)))}\/{(((2|->REGIONS)) |-> ((2|->TYPES)))}))) & discounts : ((1..4)*{REGIONS}) +-> NATURAL & dom(discounts) = ((1..4)*{REGIONS}) & ((discounts) : (((((1..4)*{REGIONS})) --> (NATURAL)))) & ((discounts) = (({(((2|->REGIONS)) |-> (20))}\/{(((3|->REGIONS)) |-> (0))})));
person : POW( PERSON) & person_name : person +-> STR & dom(person_name) = person & ((person_name) : (((person) --> (STR)))) & person_age : person +-> NATURAL & dom(person_age) = person & ((person_age) : (((person) --> (NATURAL)))) & cards : POW( CARDS) & iban : cards +-> STR & dom(iban) = cards & ((iban) : (((cards) --> (STR)))) & type : cards +-> ((1..2)*{TYPES}) & dom(type) = cards & ((type) : (((cards) --> (((1..2)*{TYPES}))))) & holder : cards +-> person & dom(holder) = cards & ((holder) : (((cards) --> (person)))) & !(crd).(((((crd) : (cards))) => (((min_age )((type )(crd)) <= (person_age )((holder )(crd)))))) & shop : POW( SHOP) & name : shop +-> STR & dom(name) = shop & ((name) : (((shop) --> (STR)))) & region : shop +-> ((1..4)*{REGIONS}) & dom(region) = shop & ((region) : (((shop) --> (((1..4)*{REGIONS}))))) & payment : POW( PAYMENT) & payment_card : payment +-> cards & dom(payment_card) = payment & ((payment_card) : (((payment) --> (cards)))) & payment_shop : payment +-> shop & dom(payment_shop) = payment & ((payment_shop) : (((payment) --> (shop)))) & !(pay).(((((pay) : (payment))) => ((((type )((payment_card )(pay))) = ((card_acceptance )((region )((payment_shop )(pay)))))))) & payment_amount : payment +-> NATURAL & dom(payment_amount) = payment & ((payment_amount) : (((payment) --> (NATURAL))));
{} : POW( PERSON);
{} : {} +-> STR;
dom({}) = {};
(({}) : ((({}) --> (STR))));
{} : {} +-> NATURAL;
(({}) : ((({}) --> (NATURAL))));
{} : POW( CARDS);
{} : {} +-> ((1..2)*{TYPES});
(({}) : ((({}) --> (((1..2)*{TYPES})))));
{} : {} +-> {};
(({}) : ((({}) --> ({}))));
!(crd).(((((crd) : ({}))) => (((min_age )(({} )(crd)) <= ({} )(({} )(crd))))));
{} : POW( SHOP);
{} : {} +-> ((1..4)*{REGIONS});
(({}) : ((({}) --> (((1..4)*{REGIONS})))));
{} : POW( PAYMENT);
!(pay).(((((pay) : ({}))) => (((({} )(({} )(pay))) = ((card_acceptance )(({} )(({} )(pay))))))));
btrue
END
&
THEORY EnumerateX IS
REGIONS == {AFRICA,EUROPE,USA,ASIA};
TYPES == {VISA,VIRTUAL}
END
